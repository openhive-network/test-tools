[build-system]
requires = ["poetry-core==1.1.0"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "test-tools"
version = "0.0.0"
description = "Tools for testing hive software"
authors = ["Piotr Batko <pbatko@syncad.com>"]
readme = "readme.md"
repository = "https://gitlab.syncad.com/hive/test-tools"
source = [
    { name = "PyPI", priority = "primary" },
    { name = "gitlab-schemas", url = "https://gitlab.syncad.com/api/v4/projects/362/packages/pypi/simple", priority = "supplemental" },
    { name = "gitlab-beekeepy", url = "https://gitlab.syncad.com/api/v4/projects/434/packages/pypi/simple", priority = "supplemental" },
    { name = "gitlab-wax", url = "https://gitlab.syncad.com/api/v4/projects/419/packages/pypi/simple", priority = "supplemental" },
    { name = "gitlab-api-packages", url = "https://gitlab.syncad.com/api/v4/projects/198/packages/pypi/simple", priority = "supplemental" },
]
packages = [
    { include = "test_tools", from = "package" },
]


[tool.poetry.dependencies]
python = "^3.12"
python-dateutil = "2.8.2"
abstractcp = "0.9.9"
loguru = "0.7.2"
wax = "0.3.10.dev904+f491343f"


[tool.poetry.group.dev.dependencies]
black = "23.3.0"
local-tools = { path = "tests/local-tools", develop = true }
pre-commit = "2.21.0"
mypy = "1.11.2"
ruff = "0.6.5"
pytest = "8.3.5"
pytest-xdist = "3.6.1"


[tool.black]
line-length = 120


[tool.ruff]
line-length = 120

[tool.ruff.lint]
# https://beta.ruff.rs/docs/rules/
select = [
    "F",
    "E",
    "W",
    "C",
    "I",
    "N",
    "D",
    "UP",
    "YTT",
    "ASYNC",
    "BLE",
    "B",
    "A",
    "C4",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "RSE",
    "RET",
    "SIM",
    "TID",
    "TCH",
    "ARG",
    "PTH",
    "ERA",
    "PL",
    "TRY",
    "FLY",
    "RUF",
]
ignore = [
    "E501", # line too long, handled by black
    "D203", # 1 blank line required before class docstring; because we re using D211
    "D212", # Multi-line docstring summary should start at the first line; because we re using D213
    "D401", # first line should be in imperative mood
    "PT004", # fixture does not return anything, add leading underscore;  issue: pytest seems to ignore (not launch) auto-use fixtures with leading underscode

    "TRY003", # too restrictive
    "PLR0913", # too restrictive, too many arguments to function call

    "D104", # missing docstring in public package
    "D100", # missing docstring in public module
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [  # no need for docstrings in tests
    "D100", # missing docstring in public module
    "D101", # missing docstring in public class
    "D102", # missing docstring in public method
    "D103", # missing docstring in public function
    "D104", # missing docstring in public package
    "D105", # missing docstring in magic method
    "D106", # missing docstring in public nested class
    "D107", # missing docstring in __init__

]

[tool.ruff.lint.isort]
known-first-party = ["helpy", "schemas", "wax"]
required-imports = ["from __future__ import annotations"]


[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]


[tool.mypy]
strict = true
disallow_untyped_decorators = false
allow_any_generics = true
