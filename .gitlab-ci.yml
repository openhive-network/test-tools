image: "$CI_REGISTRY_IMAGE/ci-cd-base-image:2"


stages:
  - static_code_analysis
  - tests


variables:
  # colors:
  TXT_BLUE: "\e[1;34m"
  TXT_CLEAR: "\e[0m"


.shared_tags: &shared_tags
  - hived-for-tests  # Change to 'public-runner-docker' when pylint will be updated


.configuration:
  before_script:
    - pip install poetry==1.2.0
    - poetry install
    - poetry env info
    - source `poetry env info --path`/bin/activate
    - pip list


#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| STATIC CODE ANALYSIS |>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

pre_commit_checks:
  stage: static_code_analysis
  extends: .configuration
  script:
    - echo -e "${TXT_BLUE}Check all files with pre-commit hooks${TXT_CLEAR}" &&
      pre-commit run --all-files
  tags: *shared_tags


lint_code_with_pylint:
  stage: static_code_analysis
  extends: .configuration
  script:
    - echo -e "${TXT_BLUE}Lint all sources with pylint${TXT_CLEAR}" &&
      pylint package/test_tools tests/
    - echo -e "${TXT_BLUE}Lint user handles documentation${TXT_CLEAR}" &&
      pylint package/test_tools/__private/user_handles/handles/
        --load-plugins=pylint.extensions.docparams
        --accept-no-param-doc=false --default-docstring-type=sphinx
        --enable=missing-function-docstring
  tags: *shared_tags

#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<| STATIC CODE ANALYSIS |<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| TESTS |>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

unit_tests_launch:
  stage: tests
  extends: .configuration
  needs: []  # to start immediately, without waiting for previous stages
  script:
    - echo -e "${TXT_BLUE}Launch unit tests${TXT_CLEAR}" &&
      python3 -m pytest -n auto -m "not requires_hived_executables" --junitxml=report.xml tests/unit_tests
  artifacts:
    reports:
      junit: report.xml
  tags: *shared_tags

#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<| TESTS |<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
