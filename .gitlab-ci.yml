stages:
  - static_code_analysis
  - tests


variables:
  GIT_SUBMODULE_STRATEGY: recursive
  PACKAGES_TO_CHECK: "package/test_tools/ tests/"
  # uses registry.gitlab.syncad.com/hive/hive/ci-base-image:ubuntu22.04-7
  CI_BASE_IMAGE_TAG: "@sha256:8f68baf07c6e581e1e8034a1447c4ff1268239fc886bfe4b02aa3f4182bf78bb"
  CI_BASE_IMAGE: "registry.gitlab.syncad.com/hive/hive/ci-base-image${CI_BASE_IMAGE_TAG}"
  # colors:
  TXT_BLUE: "\e[1;34m"
  TXT_CLEAR: "\e[0m"


image: "${CI_BASE_IMAGE}"


default:
  tags:
    - public-runner-docker


.configuration:
  before_script:
    - poetry install
    - poetry env info
    - source `poetry env info --path`/bin/activate
    - pip list


#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| STATIC CODE ANALYSIS |>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

pre_commit_checks:
  stage: static_code_analysis
  extends: .configuration
  script:
    - echo -e "${TXT_BLUE}Check all files with pre-commit hooks${TXT_CLEAR}" &&
      pre-commit run --all-files
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - poetry.lock


lint_code_with_pylint:
  stage: static_code_analysis
  extends: .configuration
  script:
    - echo -e "${TXT_BLUE}Lint all sources with pylint${TXT_CLEAR}" &&
      pylint ${PACKAGES_TO_CHECK}
    - echo -e "${TXT_BLUE}Lint user handles documentation${TXT_CLEAR}" &&
      pylint package/test_tools/__private/user_handles/handles/
        --load-plugins=pylint.extensions.docparams
        --accept-no-param-doc=false --default-docstring-type=sphinx
        --enable=missing-function-docstring


imports_order_with_isort_check:
  stage: static_code_analysis
  extends: .configuration
  script:
    - echo -e "${TXT_BLUE}Check imports order with isort${TXT_CLEAR}" &&
      isort ${PACKAGES_TO_CHECK} --check --diff --color


formatting_with_black_check:
  stage: static_code_analysis
  extends: .configuration
  script:
    - echo -e "${TXT_BLUE}Checking code formatting with black${TXT_CLEAR}" &&
      black ${PACKAGES_TO_CHECK} --check --diff --color

#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<| STATIC CODE ANALYSIS |<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| TESTS |>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

unit_tests_launch:
  stage: tests
  extends: .configuration
  needs: []  # to start immediately, without waiting for previous stages
  script:
    - echo -e "${TXT_BLUE}Launch unit tests${TXT_CLEAR}" &&
      python3 -m pytest -n auto -m "not requires_hived_executables" --junitxml=report.xml tests/unit_tests
  artifacts:
    reports:
      junit: report.xml

#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<| TESTS |<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
